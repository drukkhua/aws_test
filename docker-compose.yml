services:
  # PostgreSQL database
  db:
    image: postgres:13
    container_name: f1-store-postgres
    restart: always
    env_file:
      - .env.postgres
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis cache
  redis:
    image: redis:6-alpine
    container_name: f1-store-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend RDS service
  backend-rds:
    build: ./backend_rds
    container_name: f1-store-backend-rds
    volumes:
      - ./backend_rds:/app
    ports:
      - "8000:8000"
    env_file:
      - .env.backend-rds
    depends_on:
      - db
    restart: unless-stopped

  backend-redis:
    build: ./backend_redis
    container_name: f1-store-backend-redis
    volumes:
      - ./backend_redis:/app
    ports:
      - "8001:8001"
    env_file:
      - .env.backend-redis
    depends_on:
      - redis

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: f1-store-frontend
    ports:
      - "80:80"
    depends_on:
      - backend-rds
      - backend-redis
    restart: unless-stopped

volumes:
  pgdata:
  redis_data:
